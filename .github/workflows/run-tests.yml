name: Run Backend and Frontend Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Backend Dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Backend Tests
        run: |
          cd backend
          python -m unittest discover -s tests -p "*.py"

  frontend-tests:
    name: Frontend Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test
  
  cypress-tests:
    name: Cypress Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Server and Cypress Tests (Unix)
        if: runner.os != 'Windows'
        run: |
          cd frontend
          # Start the server in the background
          npm run start:dev &
          # Wait for the server to be ready (adjust the sleep time if needed)
          sleep 10
          # Run Cypress tests
          npx cypress run
        shell: bash

      - name: Run Server and Cypress Tests (Windows)
        if: runner.os == 'Windows'
        run: |
          cd frontend
          # Start the server in the background
          start /B npm run start:dev
          # Wait for the server to be ready (adjust the sleep time if needed)
          timeout /t 10
          # Run Cypress tests
          npx cypress run
        shell: cmd
